From 1bff4940467df1b8a9aad1e825e577e7626b4ced Mon Sep 17 00:00:00 2001
From: abcang <abcang1015@gmail.com>
Date: Sat, 21 Dec 2019 19:00:47 +0900
Subject: [PATCH 1/3] Fix ActionController::TestSession#id to return
 Rack::Session::SessionId instance

---
 actionpack/lib/action_controller/test_case.rb         | 4 ++--
 actionpack/test/dispatch/session/test_session_test.rb | 5 +++++
 2 files changed, 7 insertions(+), 2 deletions(-)

--- a/actionpack/lib/action_controller/test_case.rb
+++ b/actionpack/lib/action_controller/test_case.rb
@@ -177,12 +177,12 @@
 
   # Methods #destroy and #load! are overridden to avoid calling methods on the
   # @store object, which does not exist for the TestSession class.
-  class TestSession < Rack::Session::Abstract::SessionHash #:nodoc:
+  class TestSession < Rack::Session::Abstract::PersistedSecure::SecureSessionHash #:nodoc:
     DEFAULT_OPTIONS = Rack::Session::Abstract::Persisted::DEFAULT_OPTIONS
 
     def initialize(session = {})
       super(nil, nil)
-      @id = SecureRandom.hex(16)
+      @id = Rack::Session::SessionId.new(SecureRandom.hex(16))
       @data = stringify_keys(session)
       @loaded = true
     end
--- a/actionpack/test/dispatch/session/test_session_test.rb
+++ b/actionpack/test/dispatch/session/test_session_test.rb
@@ -62,4 +62,10 @@
     session = ActionController::TestSession.new(one: "1")
     assert_equal(2, session.fetch("2") { |key| key.to_i })
   end
+
+  def test_session_id
+    session = ActionController::TestSession.new
+    assert_instance_of String, session.id.public_id
+    assert_equal(session.id.public_id, session["session_id"])
+  end
 end
